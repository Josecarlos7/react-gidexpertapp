{"version":3,"sources":["components/AgregarCategoria.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","class","GifGridItem","img","className","src","url","alt","title","getGifs","categoria","a","encodeURI","fetch","repuesta","json","data","gifs","map","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","imagenes","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"mMA2BeA,EAzBiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC/B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAE1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAIlB,UACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAeE,EAAEU,OAAOJ,UAiBpB,wBAAQD,KAAK,SAASM,MAAM,SAA5B,mCCrBCC,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC1B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAMC,IAAKJ,EAAIK,QAC7B,4BAAIL,EAAIK,Y,uBCNPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTL,EADS,iDACwCM,UAAWF,GADnD,8DAEQG,MAAOP,GAFf,cAETQ,EAFS,gBAIQA,EAASC,OAJjB,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAf,GACnB,MAAO,CAAEgB,GAAIhB,EAAIgB,GAAIX,MAAOL,EAAIK,MAAOF,IAAKH,EAAIiB,OAAOC,iBAAiBf,QAE5ER,QAAQC,IAAIkB,GATG,kBAURA,GAVQ,4CAAH,sDCsBLK,EAnBa,SAAEZ,GAC3B,MAA0BxB,mBAAS,CAC/B8B,KAAK,GACLO,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACPjB,EAAUC,GACRiB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAItB,CAAEb,IACEc,GCCKK,EAjBQ,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UACtB,EAAmCY,EAAcZ,GAApCoB,EAAb,EAAQd,KAAeO,EAAvB,EAAuBA,QAEvB,OADAzB,QAAQC,IAAIwB,GAER,qCACA,oBAAInB,UAAU,mDAAd,SAAmEM,IACjEa,GAAW,mBAAGnB,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQ0B,EAASZ,KAAK,SAAAf,GAAG,OACjB,cAAC,EAAD,CAA0BA,IAAMA,GAAdA,EAAIgB,aCkBvBY,EA5Ba,WAGxB,MAAoC7C,mBAAS,CAAC,wBAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,gCACI,gDACA,uBACA,cAAC,EAAD,CAAkBA,cAAgBA,IAClC,uBACA,6BAEQ+C,EAAWd,KAAK,SAAAe,GACZ,OAAO,cAAC,EAAD,CACPvB,UAAYuB,GACNA,Y,MCnB9BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cfce2931.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AgregarCategoria = ({ setCategorias }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue( e.target.value )\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length> 2 ) {\r\n            //aqui ordenamos que el ultimo sea primero\r\n            setCategorias( cats => [ inputValue, ...cats  ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n            <button type=\"submit\" class=\"button\">AGREGAR CATEGORIA</button>\r\n        </form>\r\n    )\r\n}\r\nexport default AgregarCategoria;\r\n","import React from 'react'\r\n//aqui destructuramos img porque al parecer venia dentro de otro img desde el gifgrid\r\nexport const GifGridItem = ( {img} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url}  alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default GifGridItem;","export const getGifs = async( categoria ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=4&api_key=kwKIyg9uS0QiTzfoXeIqI61b4tQVVgER`;\r\n        const repuesta = await fetch( url );\r\n        //deconstruimos el resultado y solo obtenemos el data, obviando asi la paginacion y demas datos en el resultado\r\n        const { data } = await repuesta.json();\r\n        //creamos un objeto solo con la informacion que nos interesa, para que se amas facil de leer\r\n        const gifs = data.map( img => {\r\n            return { id: img.id, title: img.title, url: img.images.downsized_medium.url }\r\n        })\r\n        console.log(gifs);\r\n        return gifs;\r\n    }\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n    //use efect hace que esta funcion solo se ejecute una vez cuando el componente es renderizado y no cada que detecte cambios en este componente\r\n   useEffect( () => {\r\n       getGifs ( categoria )\r\n        .then( imgs => {\r\n            //setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            //}, 3000);\r\n        });\r\n   }, [ categoria ]);\r\n   return state;\r\n}\r\nexport default useFetchGifs;","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n    const { data:imagenes, loading } = useFetchGifs( categoria );\r\n    console.log(loading);\r\n    return (\r\n        <>\r\n        <h3 className=\"categoria-name animate__animated animate__fadeIn\">{ categoria }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>  }\r\n        <div className=\"card-grid\">\r\n            {\r\n                imagenes.map( img => (\r\n                <GifGridItem key={img.id} img={ img }/>\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default GifGrid;\r\n","import React, { useState } from 'react'\r\nimport AgregarCategoria from './components/AgregarCategoria';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['Dragon Ball','Death Note','One Piece','Slam Dunk'];\r\n    const [categorias, setCategorias] = useState(['FullMetal Alchemist']) \r\n\r\n    // const handleAgregar = () => {\r\n    //     setCategorias( cats =>[...cats, 'FullMetal Alchemist'] );\r\n    //     //con esto agrego una nueva categoria a el anterior array\r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <hr/>\r\n            <AgregarCategoria setCategorias={ setCategorias }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categorias.map( cat => {\r\n                        return <GifGrid \r\n                        categoria={ cat }\r\n                        key={ cat } \r\n                        />\r\n                    })\r\n                }\r\n            </ol>  \r\n        </div>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}